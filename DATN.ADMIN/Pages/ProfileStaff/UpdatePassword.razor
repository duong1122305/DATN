@inject ISnackbar Snackbar
@inject IDialogService _diagService;
@inject HttpClient httpClient
@using DATN.ViewModels.Common
@using DATN.ViewModels.DTOs.Authenticate
<EditForm Model="@user">
    <MudItem xs="12" sm="12">
        <MudCard>
            <MudCardContent>
                <MudTextField T="string" @bind-Value="user.Password" Label="Nhập vào mật khẩu cũ" For="@(() => user.Password)" />
                <MudTextField T="string" Label="Nhập vào mật khẩu mới"/>
                <MudTextField T="string" Label="Nhập lại mật khẩu mới"/>
                <hr class="hr" />
                <div class="mt-5" style="text-align: end;">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" OnClick="@(async()=>await Create())" Color="Color.Primary" Class="ml-auto">Xác nhận</MudButton>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
</EditForm>

@code {
    [Parameter]
    public string userName { get; set; }
    [CascadingParameter] MudDialogInstance _dialogBox { get; set; }
    private bool display = false;
    //nó đây
    [Parameter]
    public UserInfView user { get; set; } = new UserInfView();

    protected async override Task OnInitializedAsync()
    {
    }

    //thêm
    protected async Task Create()
    {
        if (await Confirm()==true)
        {
            
        }
    }
    //thông báo xác nhận
    private async Task<bool?> Confirm()
    {
        var confirm = await _diagService.ShowMessageBox("Thông báo",
    "Xác nhận thay đổi mật khẩu?",
           yesText: "Xác nhận",
                    cancelText: "Hủy", noText: null, options: new DialogOptions { Position = DialogPosition.TopCenter, MaxWidth = MaxWidth.Small, FullWidth = true });
        StateHasChanged();
        return confirm;
    }

    //thông báo
    private void Message(string message, Severity severity)
    {
        Snackbar.Configuration.SnackbarVariant = Variant.Outlined;
        Snackbar.Configuration.MaxDisplayedSnackbars = 10;
        Snackbar.Add(message, severity);
    }

}