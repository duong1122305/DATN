@inject ISnackbar Snackbar
@inject IDialogService _diagService;
@inject HttpClient httpClient
@using DATN.ADMIN.IServices
@using DATN.ViewModels.Common
@using DATN.ViewModels.DTOs.Authenticate
@using DATN.ViewModels.DTOs.Booking
@using DATN.ViewModels.Enum
@inject IDialogService _dialogservice;
@if (lstBooking.Count > 0 && lstBooking != null)
{
    <MudDataGrid MultiSelection="true" Items="@lstBooking" Filterable="true"
                 Hideable="true" Groupable="true" GroupExpanded="false">
        <ToolBarContent>
            <MudSpacer />
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.NameStaffService" Title="Nhân viên làm" Filterable="false" Groupable="false" />
            <PropertyColumn Property="x => x.ServiceDetaiName" Title="Dịch vụ làm" Filterable="false" Groupable="false" />
            <TemplateColumn Title="Giờ bắt đầu" Sortable="false" Filterable="false">
                <CellTemplate>
                    <span style="text-align:center;">@context.Item.StartDate</span>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Giờ kết thúc" Sortable="false" Filterable="false">
                <CellTemplate>
                    <span style="text-align:center;">@context.Item.EndDate</span>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Thời gian đặt" Sortable="false" Filterable="false">
                <CellTemplate>
                    <span style="text-align:center;">@context.Item.BookingTime.ToString("dd/MM/yyyy")</span>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Giá dịch vụ" Sortable="false" Filterable="false">
                <CellTemplate>
                    <span style="text-align:center;">@context.Item.Price</span>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Trạng thái" Sortable="false" Filterable="false">
                <CellTemplate>
                    @if (context.Item.Status == BookingDetailStatus.IsActive)
                    {
                        <span>Đã hoàn thành</span>
                    }
                    else
                    {
                        <span>Chưa hoàn thành</span>
                    }
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="ListBokingDetailInDay" />
        </PagerContent>
    </MudDataGrid>
}
else
{
    <div style="justify-content:center; justify-items:center">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </div>
}
@code {
    [Parameter]
    public string id { get; set; }
    [Parameter]
    public DateTime dateBooking { get; set; }
    [Inject]
    IBookingViewServices _client { get; set; }
    [Parameter]
    public List<ListBokingDetailInDay> lstBooking { get; set; } = new List<ListBokingDetailInDay>();

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task LoadData()
    {
        var respone = await _client.ListBookingDetailInDay(id, dateBooking);
        if (respone.IsSuccess)
        {
            lstBooking = respone.Data;
        }
        else
        {
            lstBooking = new List<ListBokingDetailInDay>();
        }
    }
}