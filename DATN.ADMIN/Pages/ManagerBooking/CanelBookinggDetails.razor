<AuthorizeView>
    <Authorized>
        @using DATN.ADMIN.IServices
        @using DATN.ViewModels.DTOs.ActionBooking
        @inject ISnackbar Snackbar
        <DATN.ADMIN.Components.Loadding _isVisible="isLoading" />
        <EditForm Model="@actionView" OnValidSubmit="ConfirmCancel" Context="editFormContext">
            <DataAnnotationsValidator />
            <MudItem xs="12" sm="12">
                <MudCard>
                    <MudCardContent>
                        <MudTextField @bind-Value="actionView.Reason" Label="Lý do huỷ" MaxLength="255" />
                        <ValidationMessage style="color:red" For="@(()=> actionView.Reason)" />
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" OnClick="@(async()=>await Canel())">Huỷ</MudButton>
                        <MudButton Color="Color.Error" Variant="Variant.Filled" Class="mt-4" ButtonType="ButtonType.Submit">Xác nhận</MudButton>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </EditForm>
        @code {
            [Parameter]
        public int id { get; set; }

        [Inject]
        private IHttpContextAccessor _httpContextAccessor { get; set; }
        public ActionView actionView = new ActionView();

        [Inject]
        IBookingViewServices _client { get; set; }
        [CascadingParameter] MudDialogInstance _dialogBox { get; set; }
        private bool isLoading;
        public async Task ConfirmCancel()
        {
            if (actionView.Reason != null)
            {
                isLoading = true;
                await Task.Delay(500);
                actionView.IdBokingOrDetail = id;
                actionView.Token = _httpContextAccessor.HttpContext.Session.GetString("Key");
                var respone = await _client.CancelBookingDetail(actionView);
                if (respone.IsSuccess)
                {
                    Snackbar.Add(respone.Data, Severity.Success);
                    isLoading = false;
                    _dialogBox.Close(DialogResult.Ok(true));
                }
                else
                {
                    Snackbar.Add(respone.Error, Severity.Error);
                }
                isLoading = false;
            }
        }
        public async Task Canel()
        {
            _dialogBox.Close(DialogResult.Ok(true));
        }
        }
    </Authorized>
    <NotAuthorized>
        <p>Không có quyền truy cập</p>
    </NotAuthorized>
</AuthorizeView>