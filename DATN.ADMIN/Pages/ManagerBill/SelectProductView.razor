@page "/SelectViewProduct"
@using DATN.ADMIN.IServices
@using DATN.Utilites
@using DATN.ViewModels.DTOs.Product
@using DATN.ViewModels.DTOs.ProductDetail

@foreach (var item in lstProductDetaiView)
{
    <div style="display:flex">
        <MudCard Style="width:400px;margin-bottom:10px">
            <MudCardMedia Image="img/images.jpg" Height="200" />
            <MudCardContent>
                <MudText Typo="Typo.h6">@item.Name</MudText>
                <MudText Typo="Typo.body2">Tên danh mục: @item.CateName</MudText>
                <MudText Typo="Typo.body2">Tên thương hiệu: @item.BrandName</MudText>

                <MudSelect T="string" Label="Chọn" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var item2 in item.ListProductDetail)
                    {
                        <MudSelectItem Value="item2.Name" />
                    }
                </MudSelect>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary">Chọn</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Primary">???</MudButton>
            </MudCardActions>
        </MudCard>
    </div>
}
@code {
    [Parameter]
    public Guid? guid { get; set; }
    [Inject]
    private IBookingViewServices _ClientProduct { get; set; }

    private List<ProductSelect> lstProductDetaiView = new List<ProductSelect>();

    private string searchString = "";

    private async Task LoadData()
    {
        var respone = await _ClientProduct.ListProductViewSale();
        if (respone.IsSuccess)
        {
            lstProductDetaiView = respone.Data;
        }
        else
        {
            lstProductDetaiView = new List<ProductSelect>();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private Func<ProductSelect, bool> _quickFilter => x =>
      {
          if (string.IsNullOrWhiteSpace(searchString))
              return true;
          if (x.Name.Contains(searchString.Trim(), StringComparison.OrdinalIgnoreCase))
              return true;
          if ($"{x.CateName}".Contains(searchString.Trim()))
              return true;
          return false;
      };
}
