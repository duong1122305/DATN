@page "/ListVoucher"
@using System.Net.Http.Json
@using DATN.ADMIN.IServices
@using DATN.ViewModels.Common
@using DATN.ViewModels.DTOs.Authenticate
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject IDialogService _dialogservice;
<PageTitle>Danh sách mã giảm giá</PageTitle>

<MudTable Items="@lstVoucher" Hover="true" Filter="new Func<VoucherView,bool>(FilterFunc)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Danh sách mã giảm giá</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Tìm kiếm, tên" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="@(async()=>await OpenDialog(null))">Thêm</MudButton>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="text-align:center;">STT</MudTh>
        <MudTh Style="text-align:center;">VoucherName</MudTh>
        <MudTh Style="text-align:center;">Voucher Code</MudTh>
        <MudTh Style="text-align:center;">% Giảm giá</MudTh>
        <MudTh Style="text-align:center;">Mô tả</MudTh>
        <MudTh Style="text-align:center;">Ngày bắt đầu</MudTh>
        <MudTh Style="text-align:center;">Ngày kết thúc</MudTh>
        <MudTh Style="text-align:center;">Số tiền tối thiểu</MudTh>
        <MudTh Style="text-align:center;">Số tiền giảm tối đa</MudTh>
        <MudTh Style="text-align:center;">Trạng thái</MudTh>
        <MudTh Style="text-align:center;">Hành động</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="STT" Style="text-align:center;">
            @(lstVoucher.IndexOf(context) + 1)
        </MudTd>
        <MudTd DataLabel="Name" Style="text-align:center;">@context.VoucherName</MudTd>
        <MudTd DataLabel="PhoneNumber" Style="text-align:center;">@context.VoucherCode</MudTd>
        <MudTd DataLabel="Address" Style="text-align:center;">@context.DiscountPercent</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">@context.Description</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">@context.StartDate.ToString("dd/MM/yyyy")</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">@context.EndDate.ToString("dd/MM/yyyy")</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">@context.MinMoneyApplicable</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">@context.MaxMoneyDiscount</MudTd>
        <MudTd DataLabel="Email" Style="text-align:center;">Chưa có trạng thái</MudTd>
        <MudTd Style="text-align:center;">
            <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"></MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.Edit" Color="Color.Warning"></MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.RemoveRedEye" Color="Color.Tertiary"></MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
@code {
    //button trạng thái
    private bool _disableElevation = false;
    private string searchString = "";
    private List<VoucherView> lstVoucher = new List<VoucherView>();

    VoucherView voucherView = new VoucherView();
    [Inject]
    private IVoucherServices _client{get;set;}

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        var voucher = await _client.GetAll();
        lstVoucher = voucher.Data;
    }

    private bool FilterFunc(VoucherView voucher)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (voucher.VoucherName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (voucher.VoucherCode.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{voucher.StartDate} {voucher.EndDate} {voucher.DiscountPercent}".Contains(searchString))
            return true;
        return false;
    }
    //overlay màn
    private bool isVisible;

    public void OpenOverlay()
    {
        isVisible = true;
        StateHasChanged();
    }
    //thêm sửa !
    private async Task OpenDialog(int? id)
    {
        var parameters = new DialogParameters();
        string nameDialog = "Thêm mới voucher";
        if (id != null)
        {
            voucherView = lstVoucher.FirstOrDefault(c => c.Id == id);
            var updateVou = new VoucherView()
                {
                    Quantity = voucherView.Quantity,
                    VoucherCode = voucherView.VoucherCode,
                    Description = voucherView.Description,
                    StartDate = voucherView.StartDate,
                    EndDate = voucherView.EndDate,
                    DiscountPercent = voucherView.DiscountPercent,
                    MaxMoneyDiscount = voucherView.MaxMoneyDiscount,
                    MinMoneyApplicable = voucherView.MinMoneyApplicable,
                };
            parameters.Add("Id", id);
            parameters.Add("VoucherView", updateVou);
            nameDialog = "Cập nhật voucher";
        }
        DialogOptions options = new DialogOptions()
            {
                CloseOnEscapeKey = true,
                Position = DialogPosition.Center,
                MaxWidth = MaxWidth.Small,
                CloseButton = true,
                FullWidth = true
            };
        var createUpdateDialog = await _dialogservice.ShowAsync<CreateVoucherUp>(nameDialog, parameters, options);
        var result = await createUpdateDialog.Result;
        if (!result.Canceled)
        {
            createUpdateDialog.Close();
            await LoadData();
        }
    }


}