@page "/ListStaff"
@using System.Net.Http.Json
@inject HttpClient httpClient
<PageTitle>Danh sách nhân viên</PageTitle>

<MudTable Items="@Elements" Hover="@hover" Filter="new Func<Element,bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Danh sách nhân viên</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Tìm kiếm, tên" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="text-align:center;">ID</MudTh>
        <MudTh Style="text-align:center;">Tên nhân viên</MudTh>
        <MudTh Style="text-align:center;">Số điện thoại</MudTh>
        <MudTh Style="text-align:center;">Địa chỉ</MudTh>
        <MudTh Style="text-align:center;">Trạng thái</MudTh>
        <MudTh Style="text-align:center;">Xác thực</MudTh>
        <MudTh Style="text-align:center;">Hành động</MudTh>
    </HeaderContent>
    <RowTemplate >
        <MudTd DataLabel="Nr" Style="text-align:center;">
        </MudTd>
        <MudTd DataLabel="Name" Style="text-align:center;">@context.Name</MudTd>
        <MudTd DataLabel="Sign" Style="text-align:center;">@context.Sign</MudTd>
        <MudTd DataLabel="Position" Style="text-align:center;">@context.Position</MudTd>
        <MudTd DataLabel="Status" Style="text-align:center;">
            @if (context.Status== 1)
            {
                <p>Hoạt động</p>
            }
            else
            {
               <p>Ngừng hoạt động</p>

            }
        </MudTd>
        <MudTd DataLabel="Verify" Style="text-align:center;">
            @if (context.Verify == 1)
            {
                <MudChip Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Info">Đã xác thực</MudChip>
            }
            else
            {
                <MudChip Icon="@Icons.Material.Filled.Dangerous" Color="Color.Error">Chưa xác thực</MudChip>
            }
        </MudTd>
        <MudTd Style="text-align:center;">
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Xoá</MudButton>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Warning">Sửa</MudButton>
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Details" Color="Color.Tertiary">Xem</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private int cout= 0;
    //button trạng thái
    private bool _disableElevation = false;
    //hiệu ứng hover
    private bool hover = true;
    private string searchString1 = "";
    private HashSet<Element> selectedItems = new HashSet<Element>();

    private IEnumerable<Element> Elements = new List<Element>();

    protected override async Task OnInitializedAsync()
    {
        // Elements = await httpClient.GetFromJsonAsync<List<Element>>("webapi/periodictable");

        Elements = new List<Element>()
        {
            new Element() {Molar = "Test",Sign = "0989123123", Position= "Phú thọ", Name="Hưng",Number="10", Status=1, Verify=1},
            new Element() {Molar = "Test",Sign = "0989123124", Position= "Hà Nội", Name="Việt",Number="10", Status=2, Verify=2},
            new Element() {Molar = "Test",Sign = "0989123126", Position= "Bắc Giang", Name="Hà",Number="10", Status=1, Verify=1},
            new Element() {Molar = "Test",Sign = "0989123127", Position= "Tuyên Quang", Name="Dương",Number="0,3",Status=2, Verify=2}
        };
    }

    private bool FilterFunc1(Element element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Element element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
            return true;
        return false;
    }

    public class Element
    {
        public string Sign { get; set; } = string.Empty;
        public string Number { get; set; } = string.Empty;
        public int Verify { get; set; } 
        public string Position { get; set; } = string.Empty;
        public int Status { get; set; } 
        public string Molar { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
    }

}