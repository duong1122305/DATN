@* @page "/combobox"
<h1>Toggle Combobox in Blazor</h1>

@code {
    string status = "inactive";

    void ToggleCombo(ChangeEventArgs e)
    {
        status = e.Value.ToString();
    }
}

<select @onchange="ToggleCombo">
    <option value="inactive">Không hoạt động</option>
    <option value="active">Hoạt động</option>
</select>

@if (status == "active")
{
    <select>
        <option>Tùy chọn 1</option>
        <option>Tùy chọn 2</option>
        <option>Tùy chọn 3</option>
    </select>
    <button>
        Đăng ký
    </button>
}
 *@

@*  @page "/combobox"
@using System.Collections.Generic

<h3>Danh sách nhân viên</h3>

@foreach (var employee in Employees)
{
    <div>
        <input type="checkbox" @bind="@employee.IsSelected" @onclick="@(e => UpdateSelection(employee))" />
        <input type="text" @bind="@employee.Name" />
        <select @bind="@employee.WorkShift" @bind:event="oninput" disabled="@(!employee.IsSelected)">
            <option value="morning">Ca Sáng</option>
            <option value="afternoon">Ca Chiều</option>
            <option value="night">Ca Tối</option>
        </select>
        <button @onclick="@(e => RemoveEmployee(employee))" disabled="@(!employee.IsSelected)">Xoá</button>
    </div>
}

<button @onclick="AddEmployee">Thêm</button>

@code {
    public class Employee
    {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
        public string WorkShift { get; set; }
    }
    List<Employee> Employees = new List<Employee>
    {
        new Employee { Name = "Nhân viên 1" },
        new Employee { Name = "Nhân viên 2" },
        new Employee { Name = "Nhân viên 3" }
    };

    void UpdateSelection(Employee employee)
    {
        if (employee.IsSelected)
        {
            employee.WorkShift = "morning"; // Ca mặc định là Ca Sáng
        }
    }

    void RemoveEmployee(Employee employee)
    {
        Employees.Remove(employee);
    }

    void AddEmployee()
    {
        Employees.Add(new Employee());
    }
} *@

@*         @page "/combobox"
@using System.Collections.Generic

<h3>Danh sách nhân viên</h3>

@foreach (var employee in Employees)
{
    <div>
        <input type="checkbox" @bind="@employee.IsSelected" />
        <span>@employee.Name</span>
    </div>
}

<button @onclick="RemoveSelectedEmployees" disabled="@(!HasSelectedEmployees)">Xoá nhân viên đã chọn</button>
<p>@DeleteMessage</p>

@code {
    public class Employee
    {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
    }
    List<Employee> Employees = new List<Employee>
    {
        new Employee { Name = "Nhân viên 1" },
        new Employee { Name = "Nhân viên 2" },
        new Employee { Name = "Nhân viên 3" }
    };

    bool HasSelectedEmployees => Employees.Any(e => e.IsSelected);
    string DeleteMessage { get; set; }

    void RemoveSelectedEmployees()
    {
        var selectedEmployees = Employees.Where(e => e.IsSelected).ToList();
        foreach (var employee in selectedEmployees)
        {
            Employees.Remove(employee);
        }
        DeleteMessage = $"Đã xoá {selectedEmployees.Count} nhân viên.";
    }
} *@

@*         @page "/combobox"
@using System.Collections.Generic
@using System.Linq

<h3>Danh sách nhân viên</h3>

@foreach (var employee in Employees)
{
    <div>
        <input type="checkbox" @bind="@employee.IsSelected" />
        <span>@employee.Name</span>
    </div>
}

<div>
    <button @onclick="AddSelectedEmployeesToShift" disabled="@(!HasSelectedEmployees)">Thêm vào ca làm</button>
    <button @onclick="RemoveSelectedEmployees" disabled="@(!HasSelectedEmployees)">Xoá nhân viên đã chọn</button>
</div>

<p>@DeleteMessage</p>

@code {
    public class Employee
    {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
    }
    List<Employee> Employees = new List<Employee>
    {
        new Employee { Name = "Nhân viên 1" },
        new Employee { Name = "Nhân viên 2" },
        new Employee { Name = "Nhân viên 3" }
    };

    bool HasSelectedEmployees => Employees.Any(e => e.IsSelected);
    string DeleteMessage { get; set; }

    void RemoveSelectedEmployees()
    {
        if (HasSelectedEmployees)
        {
            DeleteMessage = "Bạn có chắc chắn muốn xoá những nhân viên đã chọn?";
        }
    }

    void AddSelectedEmployeesToShift()
    {
        var selectedEmployees = Employees.Where(e => e.IsSelected).ToList();
        // Thêm code để thêm nhân viên vào ca làm ở đây
    }
} *@
@* 
    @page "/combobox"
@using System.Collections.Generic
@using System.Linq

<h3>Danh sách nhân viên</h3>

@foreach (var employee in Employees)
{
    <div>
        <input type="checkbox" @bind="@employee.IsSelected" />
        <span>@employee.Name</span>
        @if (employee.IsSelected)
        {
            <select @bind="@employee.WorkShift">
                <option value="morning">Ca Sáng</option>
                <option value="afternoon">Ca Chiều</option>
                <option value="night">Ca Tối</option>
            </select>
        }
    </div>
}

<button @onclick="AddSelectedEmployeesToShift" disabled="@(!HasSelectedEmployees)">Thêm vào ca làm</button>
<button @onclick="RemoveSelectedEmployees" disabled="@(!HasSelectedEmployees)">Xoá nhân viên đã chọn</button>

@if (AddedEmployees.Any())
{
    <h3>Nhân viên đã thêm vào ca làm</h3>
    <ul>
        @foreach (var employee in AddedEmployees)
        {
            <li>@employee.Name - @employee.WorkShift</li>
        }
    </ul>
}

<p>@DeleteMessage</p>

@code {
    public class Employee
    {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
        public string WorkShift { get; set; }
    }
    List<Employee> Employees = new List<Employee>
    {
        new Employee { Name = "Nhân viên 1" },
        new Employee { Name = "Nhân viên 2" },
        new Employee { Name = "Nhân viên 3" }
    };

    List<Employee> AddedEmployees = new List<Employee>();

    bool HasSelectedEmployees => Employees.Any(e => e.IsSelected);
    string DeleteMessage { get; set; }

    void RemoveSelectedEmployees()
    {
        if (HasSelectedEmployees)
        {
            DeleteMessage = "Bạn có chắc chắn muốn xoá những nhân viên đã chọn?";
        }
    }

    void AddSelectedEmployeesToShift()
    {
        var selectedEmployees = Employees.Where(e => e.IsSelected).ToList();
        foreach (var employee in selectedEmployees)
        {
            if (!string.IsNullOrEmpty(employee.WorkShift))
            {
                AddedEmployees.Add(employee);
            }
        }
    }
} *@

    @page "/combobox"
@using System.Collections.Generic
@using System.Linq

<h3>Danh sách nhân viên</h3>

@foreach (var employee in Employees)
{
    <div>
        <input type="checkbox" @bind="@employee.IsSelected" />
        <span>@employee.Name</span>
        @if (employee.IsSelected)
        {
            <select @bind="@employee.WorkShift">
                <option value="morning">Ca Sáng</option>
                <option value="afternoon">Ca Chiều</option>
                <option value="night">Ca Tối</option>
            </select>
        }
    </div>
}

<button @onclick="AddSelectedEmployeesToShift" disabled="@(!HasSelectedEmployees)">Thêm vào ca làm</button>
<button @onclick="ShowDeleteConfirmation" disabled="@(!HasSelectedEmployees)">Xoá nhân viên đã chọn</button>

@if (AddedEmployees.Any())
{
    <h3>Nhân viên đã thêm vào ca làm</h3>
    <ul>
        @foreach (var employee in AddedEmployees)
        {
            <li>@employee.Name - @employee.WorkShift</li>
        }
    </ul>
}

@if (IsDeleteConfirmationVisible)
{
    <div class="modal">
        <div class="modal-content">
            <span class="close" @onclick="HideDeleteConfirmation">&times;</span>
            <p>Bạn có chắc chắn muốn xoá những nhân viên đã chọn?</p>
            <button @onclick="ConfirmDelete">Xoá</button>
            <button @onclick="HideDeleteConfirmation">Huỷ</button>
        </div>
    </div>
}

@code {
    public class Employee
    {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
        public string WorkShift { get; set; }
    }
    List<Employee> Employees = new List<Employee>
    {
        new Employee { Name = "Nhân viên 1" },
        new Employee { Name = "Nhân viên 2" },
        new Employee { Name = "Nhân viên 3" }
    };

    List<Employee> AddedEmployees = new List<Employee>();

    bool HasSelectedEmployees => Employees.Any(e => e.IsSelected);
    bool IsDeleteConfirmationVisible { get; set; }

    void ShowDeleteConfirmation()
    {
        IsDeleteConfirmationVisible = true;
    }

    void HideDeleteConfirmation()
    {
        IsDeleteConfirmationVisible = false;
    }

    void ConfirmDelete()
    {
        Employees.RemoveAll(e => e.IsSelected);
        IsDeleteConfirmationVisible = false;
    }

    void AddSelectedEmployeesToShift()
    {
        var selectedEmployees = Employees.Where(e => e.IsSelected).ToList();
        foreach (var employee in selectedEmployees)
        {
            if (!string.IsNullOrEmpty(employee.WorkShift))
            {
                AddedEmployees.Add(employee);
            }
        }
    }
}