@using System.Net.Http.Json
@using DATN.ViewModels.Common
@using DATN.ViewModels.DTOs.Authenticate
@using Newtonsoft.Json
@inject HttpClient httpClient
@inject ISnackbar Snackbar
@inject IDialogService _dialogservice;
        <MudPaper Class="pa-4" style="height: 560px; width:900px">
            <MudForm @ref="form" >
             <MudTextField T="string" Label="Tên người dùng" @bind-Value="@_newUser.UserName" Required="true" RequiredError="Vui lòng không để trống!"/>
             <MudTextField T="string" Label="Họ và tên" @bind-Value="@_newUser.FullName" Required="true" RequiredError="Vui lòng không để trống" />
             <MudTextField T="string" Label="Mật khẩu" @bind-Value="@_newUser.Password" Required="true" RequiredError="Vui lòng không để trống" />
             <MudTextField T="string" Label="Số điện thoại" @bind-Value="@_newUser.PhoneNumber" Required="true" RequiredError="Vui lòng không để trống" />
             <MudTextField T="string" Label="Email" @bind-Value="@_newUser.Email" Required="true" RequiredError="Vui lòng không để trống" />
             <MudTextField T="string" Label="Địa chỉ" @bind-Value="@_newUser.Address" Required="true" RequiredError="Vui lòng không để trống" />
             <div class="d-flex align-center justify-space-between mt-4">
                  <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="OnRegister" Class="ml-auto">Đăng ký</MudButton>
             </div>
            </MudForm>
        </MudPaper>
@code {
    bool success;
    MudForm form;
    // [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    private UserRegisterView _newUser = new UserRegisterView();
    protected  async Task OnRegister()
    {
        var response = await httpClient.PostAsJsonAsync<UserRegisterView>("api/UserLogin/User-Register", _newUser);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            var responData = JsonConvert.DeserializeObject<ResponseData<string>>(result);
            if (responData.IsSuccess)
            {
                Message(responData.Data, Severity.Success);
                // MudDialog.Close();
            }
            else Message(responData.Error, Severity.Error);

        }
        else
        {
            var erorr = response.Content.ReadAsStringAsync();

            Message("Vui lòng kiểm tra lại thông tin!", Severity.Error);
        }
    }
   
    //thông báo
    private void Message(string message, Severity severity)
    {
        Snackbar.Configuration.SnackbarVariant = Variant.Outlined;
        Snackbar.Configuration.MaxDisplayedSnackbars = 10;
        Snackbar.Add(message, severity);
    }

}