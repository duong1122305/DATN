@page "/address"
@using DATN.ViewModels.Common.Location;
@using DATN.ADMIN.IServices;

@if (provinces.Count>0)
{
    <MudSelect T="string" Label="US States" @bind-Value="selectedProvinces" @onchange="()=>ChooseProvinces()">
        @foreach (var item in provinces)
        {
            <MudSelectItem T="string" Value="@item.id">@item.name</MudSelectItem>
        }
    </MudSelect>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
@if (districs.Count>0)
{
    <MudSelect T="string" Label="US States" @bind-Value="selectedDistrict" @onchange="ChooseDistrics">
        @foreach (var item in districs)
        {
            <MudSelectItem T="string" Value="@item.id">@item.name</MudSelectItem>
        }
    </MudSelect>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
@if (wards.Count>0)
{
    <MudSelect T="string" Label="US States" @bind-Value="selectedWards">
        @foreach (var item in wards)
        {
            <MudSelectItem T="string" Value="@item.id">@item.name</MudSelectItem>
        }
    </MudSelect>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
@code {
    [Inject] public IAddressService addressService{ get; set; }
    private List<DataAdress> provinces = new List<DataAdress>();
    private List<DataAdress> districs = new List<DataAdress>();
    private List<DataAdress> wards = new List<DataAdress>();
    protected string selectedProvinces;
    protected string selectedDistrict;
    protected string selectedWards;

    protected override async Task OnInitializedAsync()
    {
        provinces = await addressService.GetProvinces();
    }

    public async Task ChooseProvinces()
    {
        districs = await addressService.GetDistricts(selectedProvinces);
    }  
    public async Task ChooseDistrics()
    {
        wards = await addressService.GetWards(selectedDistrict);
    }
}